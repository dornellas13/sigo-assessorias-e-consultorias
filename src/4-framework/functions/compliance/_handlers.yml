sendEmailCompanyCompliance: 
    handler: ${self:custom.functionsDirectory}/compliance/sendEmail.handler
    timeout: 60
    environment:
      COMPLIANCE_SOURCE_EMAIL: ${ssm:complianceSourceEmail}
    events:
     - sqs:       
        arn: arn:aws:sqs:#{AWS::Region}:#{AWS::AccountId}:${self:custom.company.sqs.name}
        batchSize: 1

getCompanyCompliance:
    handler: ${self:custom.functionsDirectory}/compliance/get.handler
    events:
      - http:
          path: companies/{companyId}/compliance
          method: GET
          cors: true 
          authorizer:
            arn: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:sigo-cross-cutting-dev-tokenAuthorizer
            type: token
            identitySource: method.request.header.Authorization
          request:
            parameters:
              paths:
                companyId: true

assessCompanyCompliance:
    handler: ${self:custom.functionsDirectory}/compliance/assess.handler
    events:
      - http:
          path: companies/{companyId}/compliance
          method: POST
          cors: true  
          # authorizer:
          #   arn: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:sigo-cross-cutting-dev-tokenAuthorizer
          #   type: token
          #   identitySource: method.request.header.Authorization
          request:
            parameters:
              paths:
                companyId: true
